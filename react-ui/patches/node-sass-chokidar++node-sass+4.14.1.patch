diff --git a/node_modules/node-sass-chokidar/node_modules/node-sass/lib/render.js b/node_modules/node-sass-chokidar/node_modules/node-sass/lib/render.js
index 858e02e..2e65435 100644
--- a/node_modules/node-sass-chokidar/node_modules/node-sass/lib/render.js
+++ b/node_modules/node-sass-chokidar/node_modules/node-sass/lib/render.js
@@ -42,11 +42,13 @@ module.exports = function(options, emitter) {
     renderOptions.file = options.src;
   }
 
+  var retries = 0;
   var sourceMap = options.sourceMap;
   var destination = options.dest;
   var stdin = options.stdin;
 
   var success = function(result) {
+    retries = 0;
     var todo = 1;
     var done = function() {
       if (--todo <= 0) {
@@ -105,7 +107,28 @@ module.exports = function(options, emitter) {
   };
 
   var error = function(error) {
-    emitter.emit('error', chalk.red(JSON.stringify(error, null, 2)));
+    if (isFileUnreadable(error) && retries < 1000) {
+      retries++;
+      sass.render(renderOptions, renderCallback);
+    }
+    else {
+      emitter.emit('error', chalk.red(JSON.stringify(error, null, 2)));
+    }
+  };
+
+  var isFileUnreadable = function(error) {
+    var unreadable = typeof error.message === 'string' &&
+    (
+        error.message.startsWith('File to read not found or unreadable: ') ||
+        error.message.startsWith('File to import not found or unreadable: ')
+    );
+
+    if (unreadable) {
+      var file = error.message.split('not found or unreadable: ')[1].trim();
+      return fs.existsSync(file);
+    }
+
+    return false;
   };
 
   var renderCallback = function(err, result) {
diff --git a/node_modules/node-sass-chokidar/node_modules/node-sass/vendor/win32-x64-72/binding.node b/node_modules/node-sass-chokidar/node_modules/node-sass/vendor/win32-x64-72/binding.node
new file mode 100644
index 0000000..b0d875d
Binary files /dev/null and b/node_modules/node-sass-chokidar/node_modules/node-sass/vendor/win32-x64-72/binding.node differ
